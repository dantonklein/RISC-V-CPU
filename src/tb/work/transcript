vsim -gui work.alu_tb2
# vsim -gui work.alu_tb2 
# Start time: 16:10:01 on Aug 01,2025
# Loading sv_std.std
# Loading work.alu_tb2
# Loading work.alucontroller
# Loading work.alu
# WARNING: No extended dataflow license exists
run -all
# Tests Finished.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# Tests Finished.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# out: correct_out         0         x
# Tests Finished.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# out:a1af8263 correct_out:a1af8263 is_zero:0 correct_is_zero:0
# Tests Finished.
# Compile of alu_tb2.sv was successful.
run -all
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# out:00000000 correct_out:xxxxxxxx is_zero:1 correct_is_zero:x
# Tests Finished.
# Compile of alu_tb2.sv failed with 10 errors.
# Compile of alu_tb2.sv failed with 5 errors.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# out:a1af8263 correct_out:a1af8263 is_zero:0 correct_is_zero:0
# Tests Finished.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# ERROR (time 150): is_zero = 0 instead of 1.
# ERROR (time 250): is_zero = 0 instead of 1.
# ERROR (time 650): is_zero = 0 instead of 1.
# ERROR (time 850): is_zero = 0 instead of 1.
# ERROR (time 950): is_zero = 0 instead of 1.
# ERROR (time 1550): is_zero = 0 instead of 1.
# ERROR (time 1650): is_zero = 0 instead of 1.
# ERROR (time 1750): is_zero = 0 instead of 1.
# Tests Finished.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# Test ADD
# Test SUB
# ERROR (time 150): is_zero = 0 instead of 1.
# Test SLL
# ERROR (time 250): is_zero = 0 instead of 1.
# Test SLT
# Test SLTU
# Test XOR
# Test SRL
# ERROR (time 650): is_zero = 0 instead of 1.
# Test SRA
# Test OR
# ERROR (time 850): is_zero = 0 instead of 1.
# Test AND
# ERROR (time 950): is_zero = 0 instead of 1.
# Test ADDI
# Test SLTI
# Test SLTIU
# Test XORI
# Test ORI
# Test ANDI
# ERROR (time 1550): is_zero = 0 instead of 1.
# Test SLLI
# ERROR (time 1650): is_zero = 0 instead of 1.
# Test SRLI
# ERROR (time 1750): is_zero = 0 instead of 1.
# Test SRAI
# Test LUI
# Test Load/Store
# BEQ for equal inputs
# BEQ for not equal inputs
# BNE for not equal inputs
# BNE for equal inputs
# BLT for less than
# BLT for greater than
# BGE for greater than
# BGE for less than
# BGE for equal to
# BLTU for less than
# BLTU for greater than
# BLTU for equal to
# BGEU for greater than
# BGEU for less than
# BGEU for equal to than
# Tests Finished.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# Test ADD
# Test SUB
# input0: 4682679c, input1: 3030ba1c
# ERROR (time 150): is_zero = 0 instead of 1.
# Test SLL
# ERROR (time 250): is_zero = 0 instead of 1.
# Test SLT
# Test SLTU
# Test XOR
# Test SRL
# ERROR (time 650): is_zero = 0 instead of 1.
# Test SRA
# Test OR
# ERROR (time 850): is_zero = 0 instead of 1.
# Test AND
# ERROR (time 950): is_zero = 0 instead of 1.
# Test ADDI
# Test SLTI
# Test SLTIU
# Test XORI
# Test ORI
# Test ANDI
# ERROR (time 1550): is_zero = 0 instead of 1.
# Test SLLI
# ERROR (time 1650): is_zero = 0 instead of 1.
# Test SRLI
# ERROR (time 1750): is_zero = 0 instead of 1.
# Test SRAI
# Test LUI
# Test Load/Store
# BEQ for equal inputs
# BEQ for not equal inputs
# BNE for not equal inputs
# BNE for equal inputs
# BLT for less than
# BLT for greater than
# BGE for greater than
# BGE for less than
# BGE for equal to
# BLTU for less than
# BLTU for greater than
# BLTU for equal to
# BGEU for greater than
# BGEU for less than
# BGEU for equal to than
# Tests Finished.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# Test ADD
# 
# input0: 12f837e7, input1: 8eb74a7c
# out: a1af8263, correct_out: a1af8263, is_zero: 0, correct_is_zero: 0
# Test SUB
# 
# input0: 4682679c, input1: 3030ba1c
# out: 1651ad80, correct_out: 1651ad80, is_zero: 0, correct_is_zero: 1
# ERROR (time 150): is_zero = 0 instead of 1.
# Test SLL
# 
# input0: 519afde8, input1: 00000007
# out: cd7ef400, correct_out: cd7ef400, is_zero: 0, correct_is_zero: 1
# ERROR (time 250): is_zero = 0 instead of 1.
# Test SLT
# 
# input0: 61604716, input1: 456ee1c4
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# Test SLTU
# 
# input0: 4879f300, input1: 03d23d59
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# Test XOR
# 
# input0: 58b64df8, input1: 40c04bfb
# out: 18760603, correct_out: 18760603, is_zero: 0, correct_is_zero: 0
# Test SRL
# 
# input0: 1fc6b311, input1: 00000002
# out: 07f1acc4, correct_out: 07f1acc4, is_zero: 0, correct_is_zero: 1
# ERROR (time 650): is_zero = 0 instead of 1.
# Test SRA
# 
# input0: 3b8f4ffc, input1: 00000005
# out: 01dc7a7f, correct_out: 01dc7a7f, is_zero: 0, correct_is_zero: 0
# Test OR
# 
# input0: 31ed88de, input1: 840d1196
# out: b5ed99de, correct_out: b5ed99de, is_zero: 0, correct_is_zero: 1
# ERROR (time 850): is_zero = 0 instead of 1.
# Test AND
# 
# input0: 37575c90, input1: 6bf09d17
# out: 23501c10, correct_out: 23501c10, is_zero: 0, correct_is_zero: 1
# ERROR (time 950): is_zero = 0 instead of 1.
# Test ADDI
# 
# input0: 49c4b7de, input1: 24b5be83
# out: 6e7a7661, correct_out: 6e7a7661, is_zero: 0, correct_is_zero: 0
# Test SLTI
# 
# input0: c3b85986, input1: 23dca814
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# Test SLTIU
# 
# input0: 2bdf79cd, input1: d8e7c65c
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# Test XORI
# 
# input0: 3e6f604f, input1: 070e17b2
# out: 396177fd, correct_out: 396177fd, is_zero: 0, correct_is_zero: 0
# Test ORI
# 
# input0: c182e897, input1: 37d356ff
# out: f7d3feff, correct_out: f7d3feff, is_zero: 0, correct_is_zero: 0
# Test ANDI
# 
# input0: 83d3cf1e, input1: 826f4bac
# out: 82434b0c, correct_out: 82434b0c, is_zero: 0, correct_is_zero: 1
# ERROR (time 1550): is_zero = 0 instead of 1.
# Test SLLI
# 
# input0: 997a812c, input1: 00000004
# out: 97a812c0, correct_out: 97a812c0, is_zero: 0, correct_is_zero: 1
# ERROR (time 1650): is_zero = 0 instead of 1.
# Test SRLI
# 
# input0: 49804e9e, input1: 00000005
# out: 024c0274, correct_out: 024c0274, is_zero: 0, correct_is_zero: 1
# ERROR (time 1750): is_zero = 0 instead of 1.
# Test SRAI
# 
# input0: 9df1a1b2, input1: 0000001b
# out: 00000013, correct_out: 00000013, is_zero: 0, correct_is_zero: 0
# Test LUI
# 
# input0: b9fe2752, input1: b4e758ad
# out: b4e758ad, correct_out: b4e758ad, is_zero: 0, correct_is_zero: 0
# Test Load/Store
# 
# input0: f6ee3b31, input1: 9cac3918
# out: 939a7449, correct_out: 939a7449, is_zero: 0, correct_is_zero: 0
# BEQ for equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0f
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# BEQ for not equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0e
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# BNE for not equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0e
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# BNE for equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0f
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# BLT for less than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# BLT for greater than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# BGE for greater than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# BGE for less than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# BGE for equal to
# 
# input0: 0000000a, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# BLTU for less than
# 
# input0: 0000000a, input1: 00000014
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# BLTU for greater than
# 
# input0: 00000014, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# BLTU for equal to
# 
# input0: 00000014, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# BGEU for greater than
# 
# input0: 00000014, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# BGEU for less than
# 
# input0: 0000000a, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# BGEU for equal to than
# 
# input0: 00000014, input1: 00000014
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# Tests Finished.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# Test ADD
# 
# input0: 12f837e7, input1: 8eb74a7c
# out: a1af8263, correct_out: a1af8263, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SUB
# 
# input0: 4682679c, input1: 3030ba1c
# out: 1651ad80, correct_out: 1651ad80, is_zero: 0, correct_is_zero: 1
# ERROR (time 150): is_zero = 0 instead of 1.
# 
# 
# Test SLL
# 
# input0: 519afde8, input1: 00000007
# out: cd7ef400, correct_out: cd7ef400, is_zero: 0, correct_is_zero: 1
# ERROR (time 250): is_zero = 0 instead of 1.
# 
# 
# Test SLT
# 
# input0: 61604716, input1: 456ee1c4
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Test SLTU
# 
# input0: 4879f300, input1: 03d23d59
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Test XOR
# 
# input0: 58b64df8, input1: 40c04bfb
# out: 18760603, correct_out: 18760603, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SRL
# 
# input0: 1fc6b311, input1: 00000002
# out: 07f1acc4, correct_out: 07f1acc4, is_zero: 0, correct_is_zero: 1
# ERROR (time 650): is_zero = 0 instead of 1.
# 
# 
# Test SRA
# 
# input0: 3b8f4ffc, input1: 00000005
# out: 01dc7a7f, correct_out: 01dc7a7f, is_zero: 0, correct_is_zero: 0
# 
# 
# Test OR
# 
# input0: 31ed88de, input1: 840d1196
# out: b5ed99de, correct_out: b5ed99de, is_zero: 0, correct_is_zero: 1
# ERROR (time 850): is_zero = 0 instead of 1.
# 
# 
# Test AND
# 
# input0: 37575c90, input1: 6bf09d17
# out: 23501c10, correct_out: 23501c10, is_zero: 0, correct_is_zero: 1
# ERROR (time 950): is_zero = 0 instead of 1.
# 
# 
# Test ADDI
# 
# input0: 49c4b7de, input1: 24b5be83
# out: 6e7a7661, correct_out: 6e7a7661, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLTI
# 
# input0: c3b85986, input1: 23dca814
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLTIU
# 
# input0: 2bdf79cd, input1: d8e7c65c
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# Test XORI
# 
# input0: 3e6f604f, input1: 070e17b2
# out: 396177fd, correct_out: 396177fd, is_zero: 0, correct_is_zero: 0
# 
# 
# Test ORI
# 
# input0: c182e897, input1: 37d356ff
# out: f7d3feff, correct_out: f7d3feff, is_zero: 0, correct_is_zero: 0
# 
# 
# Test ANDI
# 
# input0: 83d3cf1e, input1: 826f4bac
# out: 82434b0c, correct_out: 82434b0c, is_zero: 0, correct_is_zero: 1
# ERROR (time 1550): is_zero = 0 instead of 1.
# 
# 
# Test SLLI
# 
# input0: 997a812c, input1: 00000004
# out: 97a812c0, correct_out: 97a812c0, is_zero: 0, correct_is_zero: 1
# ERROR (time 1650): is_zero = 0 instead of 1.
# 
# 
# Test SRLI
# 
# input0: 49804e9e, input1: 00000005
# out: 024c0274, correct_out: 024c0274, is_zero: 0, correct_is_zero: 1
# ERROR (time 1750): is_zero = 0 instead of 1.
# 
# 
# Test SRAI
# 
# input0: 9df1a1b2, input1: 0000001b
# out: 00000013, correct_out: 00000013, is_zero: 0, correct_is_zero: 0
# 
# 
# Test LUI
# 
# input0: b9fe2752, input1: b4e758ad
# out: b4e758ad, correct_out: b4e758ad, is_zero: 0, correct_is_zero: 0
# 
# 
# Test Load/Store
# 
# input0: f6ee3b31, input1: 9cac3918
# out: 939a7449, correct_out: 939a7449, is_zero: 0, correct_is_zero: 0
# 
# 
# BEQ for equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0f
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BEQ for not equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0e
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BNE for not equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0e
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BNE for equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0f
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BLT for less than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLT for greater than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGE for greater than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BGE for less than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGE for equal to
# 
# input0: 0000000a, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLTU for less than
# 
# input0: 0000000a, input1: 00000014
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLTU for greater than
# 
# input0: 00000014, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BLTU for equal to
# 
# input0: 00000014, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGEU for greater than
# 
# input0: 00000014, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BGEU for less than
# 
# input0: 0000000a, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGEU for equal to than
# 
# input0: 00000014, input1: 00000014
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Tests Finished.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# Test ADD
# 
# input0: 12f837e7, input1: 8eb74a7c
# out: a1af8263, correct_out: a1af8263, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SUB
# 
# input0: 4682679c, input1: 3030ba1c
# out: 1651ad80, correct_out: 1651ad80, is_zero: 0, correct_is_zero: 1
# ERROR (time 150): is_zero = 0 instead of 1.
# 
# 
# Test SLL
# 
# input0: 519afde8, input1: 00000007
# out: cd7ef400, correct_out: cd7ef400, is_zero: 0, correct_is_zero: 1
# ERROR (time 250): is_zero = 0 instead of 1.
# 
# 
# Test SLT with less than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Test SLT with greater than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLTU with less than
# 
# input0: 00000014, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Test SLTU with greater than
# 
# input0: 0000000a, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# Test XOR
# 
# input0: 61604716, input1: 456ee1c4
# out: 240ea6d2, correct_out: 240ea6d2, is_zero: 0, correct_is_zero: 1
# ERROR (time 750): is_zero = 0 instead of 1.
# 
# 
# Test SRL
# 
# input0: 4879f300, input1: 00000019
# out: 00000024, correct_out: 00000024, is_zero: 0, correct_is_zero: 1
# ERROR (time 850): is_zero = 0 instead of 1.
# 
# 
# Test SRA
# 
# input0: 58b64df8, input1: 0000001b
# out: 0000000b, correct_out: 0000000b, is_zero: 0, correct_is_zero: 0
# 
# 
# Test OR
# 
# input0: 1fc6b311, input1: f9bd74a2
# out: fffff7b3, correct_out: fffff7b3, is_zero: 0, correct_is_zero: 0
# 
# 
# Test AND
# 
# input0: 3b8f4ffc, input1: 68c470a5
# out: 288440a4, correct_out: 288440a4, is_zero: 0, correct_is_zero: 1
# ERROR (time 1150): is_zero = 0 instead of 1.
# 
# 
# Test ADDI
# 
# input0: 31ed88de, input1: 840d1196
# out: b5fa9a74, correct_out: b5fa9a74, is_zero: 0, correct_is_zero: 1
# ERROR (time 1250): is_zero = 0 instead of 1.
# 
# 
# Test SLTI
# 
# input0: 37575c90, input1: 6bf09d17
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLTIU
# 
# input0: 49c4b7de, input1: 24b5be83
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Test XORI
# 
# input0: c3b85986, input1: 23dca814
# out: e064f192, correct_out: e064f192, is_zero: 0, correct_is_zero: 1
# ERROR (time 1550): is_zero = 0 instead of 1.
# 
# 
# Test ORI
# 
# input0: 2bdf79cd, input1: d8e7c65c
# out: fbffffdd, correct_out: fbffffdd, is_zero: 0, correct_is_zero: 0
# 
# 
# Test ANDI
# 
# input0: 3e6f604f, input1: 070e17b2
# out: 060e0002, correct_out: 060e0002, is_zero: 0, correct_is_zero: 1
# ERROR (time 1750): is_zero = 0 instead of 1.
# 
# 
# Test SLLI
# 
# input0: c182e897, input1: 0000001f
# out: 80000000, correct_out: 80000000, is_zero: 0, correct_is_zero: 1
# ERROR (time 1850): is_zero = 0 instead of 1.
# 
# 
# Test SRLI
# 
# input0: 83d3cf1e, input1: 0000000c
# out: 00083d3c, correct_out: 00083d3c, is_zero: 0, correct_is_zero: 1
# ERROR (time 1950): is_zero = 0 instead of 1.
# 
# 
# Test SRAI
# 
# input0: 997a812c, input1: 00000004
# out: 0997a812, correct_out: 0997a812, is_zero: 0, correct_is_zero: 1
# ERROR (time 2050): is_zero = 0 instead of 1.
# 
# 
# Test LUI
# 
# input0: 49804e9e, input1: 4dc41f85
# out: 4dc41f85, correct_out: 4dc41f85, is_zero: 0, correct_is_zero: 0
# 
# 
# Test Load/Store
# 
# input0: 9df1a1b2, input1: 1c1d169b
# out: ba0eb84d, correct_out: ba0eb84d, is_zero: 0, correct_is_zero: 0
# 
# 
# BEQ for equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0f
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BEQ for not equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0e
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BNE for not equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0e
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BNE for equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0f
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BLT for less than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLT for greater than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGE for greater than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BGE for less than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGE for equal to
# 
# input0: 0000000a, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLTU for less than
# 
# input0: 0000000a, input1: 00000014
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLTU for greater than
# 
# input0: 00000014, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BLTU for equal to
# 
# input0: 00000014, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGEU for greater than
# 
# input0: 00000014, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BGEU for less than
# 
# input0: 0000000a, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGEU for equal to than
# 
# input0: 00000014, input1: 00000014
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Tests Finished.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# Test ADD
# 
# input0: 12f837e7, input1: 8eb74a7c
# out: a1af8263, correct_out: a1af8263, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SUB
# 
# input0: 4682679c, input1: 3030ba1c
# out: 1651ad80, correct_out: 1651ad80, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLL
# 
# input0: 519afde8, input1: 00000007
# out: cd7ef400, correct_out: cd7ef400, is_zero: 0, correct_is_zero: 1
# ERROR (time 250): is_zero = 0 instead of 1.
# 
# 
# Test SLT with less than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Test SLT with greater than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLTU with less than
# 
# input0: 00000014, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Test SLTU with greater than
# 
# input0: 0000000a, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# Test XOR
# 
# input0: 61604716, input1: 456ee1c4
# out: 240ea6d2, correct_out: 240ea6d2, is_zero: 0, correct_is_zero: 1
# ERROR (time 750): is_zero = 0 instead of 1.
# 
# 
# Test SRL
# 
# input0: 4879f300, input1: 00000019
# out: 00000024, correct_out: 00000024, is_zero: 0, correct_is_zero: 1
# ERROR (time 850): is_zero = 0 instead of 1.
# 
# 
# Test SRA
# 
# input0: 58b64df8, input1: 0000001b
# out: 0000000b, correct_out: 0000000b, is_zero: 0, correct_is_zero: 0
# 
# 
# Test OR
# 
# input0: 1fc6b311, input1: f9bd74a2
# out: fffff7b3, correct_out: fffff7b3, is_zero: 0, correct_is_zero: 0
# 
# 
# Test AND
# 
# input0: 3b8f4ffc, input1: 68c470a5
# out: 288440a4, correct_out: 288440a4, is_zero: 0, correct_is_zero: 1
# ERROR (time 1150): is_zero = 0 instead of 1.
# 
# 
# Test ADDI
# 
# input0: 31ed88de, input1: 840d1196
# out: b5fa9a74, correct_out: b5fa9a74, is_zero: 0, correct_is_zero: 1
# ERROR (time 1250): is_zero = 0 instead of 1.
# 
# 
# Test SLTI
# 
# input0: 37575c90, input1: 6bf09d17
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLTIU
# 
# input0: 49c4b7de, input1: 24b5be83
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Test XORI
# 
# input0: c3b85986, input1: 23dca814
# out: e064f192, correct_out: e064f192, is_zero: 0, correct_is_zero: 1
# ERROR (time 1550): is_zero = 0 instead of 1.
# 
# 
# Test ORI
# 
# input0: 2bdf79cd, input1: d8e7c65c
# out: fbffffdd, correct_out: fbffffdd, is_zero: 0, correct_is_zero: 0
# 
# 
# Test ANDI
# 
# input0: 3e6f604f, input1: 070e17b2
# out: 060e0002, correct_out: 060e0002, is_zero: 0, correct_is_zero: 1
# ERROR (time 1750): is_zero = 0 instead of 1.
# 
# 
# Test SLLI
# 
# input0: c182e897, input1: 0000001f
# out: 80000000, correct_out: 80000000, is_zero: 0, correct_is_zero: 1
# ERROR (time 1850): is_zero = 0 instead of 1.
# 
# 
# Test SRLI
# 
# input0: 83d3cf1e, input1: 0000000c
# out: 00083d3c, correct_out: 00083d3c, is_zero: 0, correct_is_zero: 1
# ERROR (time 1950): is_zero = 0 instead of 1.
# 
# 
# Test SRAI
# 
# input0: 997a812c, input1: 00000004
# out: 0997a812, correct_out: 0997a812, is_zero: 0, correct_is_zero: 1
# ERROR (time 2050): is_zero = 0 instead of 1.
# 
# 
# Test LUI
# 
# input0: 49804e9e, input1: 4dc41f85
# out: 4dc41f85, correct_out: 4dc41f85, is_zero: 0, correct_is_zero: 0
# 
# 
# Test Load/Store
# 
# input0: 9df1a1b2, input1: 1c1d169b
# out: ba0eb84d, correct_out: ba0eb84d, is_zero: 0, correct_is_zero: 0
# 
# 
# BEQ for equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0f
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BEQ for not equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0e
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BNE for not equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0e
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BNE for equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0f
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BLT for less than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLT for greater than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGE for greater than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BGE for less than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGE for equal to
# 
# input0: 0000000a, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLTU for less than
# 
# input0: 0000000a, input1: 00000014
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLTU for greater than
# 
# input0: 00000014, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BLTU for equal to
# 
# input0: 00000014, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGEU for greater than
# 
# input0: 00000014, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BGEU for less than
# 
# input0: 0000000a, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGEU for equal to than
# 
# input0: 00000014, input1: 00000014
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Tests Finished.
# Compile of alu_tb2.sv was successful.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.alu_tb2
run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# Test ADD
# 
# input0: 12f837e7, input1: 8eb74a7c
# out: a1af8263, correct_out: a1af8263, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SUB
# 
# input0: 4682679c, input1: 3030ba1c
# out: 1651ad80, correct_out: 1651ad80, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLL
# 
# input0: 519afde8, input1: 00000007
# out: cd7ef400, correct_out: cd7ef400, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLT with less than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Test SLT with greater than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLTU with less than
# 
# input0: 00000014, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Test SLTU with greater than
# 
# input0: 0000000a, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# Test XOR
# 
# input0: 61604716, input1: 456ee1c4
# out: 240ea6d2, correct_out: 240ea6d2, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SRL
# 
# input0: 4879f300, input1: 00000019
# out: 00000024, correct_out: 00000024, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SRA
# 
# input0: 58b64df8, input1: 0000001b
# out: 0000000b, correct_out: 0000000b, is_zero: 0, correct_is_zero: 0
# 
# 
# Test OR
# 
# input0: 1fc6b311, input1: f9bd74a2
# out: fffff7b3, correct_out: fffff7b3, is_zero: 0, correct_is_zero: 0
# 
# 
# Test AND
# 
# input0: 3b8f4ffc, input1: 68c470a5
# out: 288440a4, correct_out: 288440a4, is_zero: 0, correct_is_zero: 0
# 
# 
# Test ADDI
# 
# input0: 31ed88de, input1: 840d1196
# out: b5fa9a74, correct_out: b5fa9a74, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLTI
# 
# input0: 37575c90, input1: 6bf09d17
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLTIU
# 
# input0: 49c4b7de, input1: 24b5be83
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Test XORI
# 
# input0: c3b85986, input1: 23dca814
# out: e064f192, correct_out: e064f192, is_zero: 0, correct_is_zero: 0
# 
# 
# Test ORI
# 
# input0: 2bdf79cd, input1: d8e7c65c
# out: fbffffdd, correct_out: fbffffdd, is_zero: 0, correct_is_zero: 0
# 
# 
# Test ANDI
# 
# input0: 3e6f604f, input1: 070e17b2
# out: 060e0002, correct_out: 060e0002, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SLLI
# 
# input0: c182e897, input1: 0000001f
# out: 80000000, correct_out: 80000000, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SRLI
# 
# input0: 83d3cf1e, input1: 0000000c
# out: 00083d3c, correct_out: 00083d3c, is_zero: 0, correct_is_zero: 0
# 
# 
# Test SRAI
# 
# input0: 997a812c, input1: 00000004
# out: 0997a812, correct_out: 0997a812, is_zero: 0, correct_is_zero: 0
# 
# 
# Test LUI
# 
# input0: 49804e9e, input1: 4dc41f85
# out: 4dc41f85, correct_out: 4dc41f85, is_zero: 0, correct_is_zero: 0
# 
# 
# Test Load/Store
# 
# input0: 9df1a1b2, input1: 1c1d169b
# out: ba0eb84d, correct_out: ba0eb84d, is_zero: 0, correct_is_zero: 0
# 
# 
# BEQ for equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0f
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BEQ for not equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0e
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BNE for not equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0e
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BNE for equal inputs
# 
# input0: 0f0f0f0f, input1: 0f0f0f0f
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BLT for less than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLT for greater than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGE for greater than
# 
# input0: 0000000a, input1: fffffff6
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BGE for less than
# 
# input0: fffffff6, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGE for equal to
# 
# input0: 0000000a, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLTU for less than
# 
# input0: 0000000a, input1: 00000014
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BLTU for greater than
# 
# input0: 00000014, input1: 0000000a
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BLTU for equal to
# 
# input0: 00000014, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGEU for greater than
# 
# input0: 00000014, input1: 0000000a
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# BGEU for less than
# 
# input0: 0000000a, input1: 00000014
# out: 00000001, correct_out: 00000001, is_zero: 0, correct_is_zero: 0
# 
# 
# BGEU for equal to than
# 
# input0: 00000014, input1: 00000014
# out: 00000000, correct_out: 00000000, is_zero: 1, correct_is_zero: 1
# 
# 
# Tests Finished.
